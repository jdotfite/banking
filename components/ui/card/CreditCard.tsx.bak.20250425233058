'use client';

import React, { useState } from 'react';
import { CardType } from '@/lib/types';

interface CreditCardProps {
  card: CardType;
}

const CreditCard: React.FC<CreditCardProps> = ({ card }) => {
  const [showInfo, setShowInfo] = useState(false);

  // Determine logo based on card type
  const getCardLogo = (type: string) => {
    switch (type) {
      case 'VISA':
        return (
          <div className="hidden"></div>
        );
      case 'MASTERCARD':
        return (
          <div className="text-white text-3xl font-bold tracking-wider">MASTERCARD</div>
        );
      case 'AMEX':
        return (
          <div className="text-white text-3xl font-bold tracking-wider">AMEX</div>
        );
      default:
        return (
          <div className="text-white text-3xl font-bold tracking-wider">{type}</div>
        );
    }
  };

  // Determine gradient colors based on card type
  let gradientStyle = {};
  if (card.type === 'VISA') {
    // Red gradient for VISA cards
    gradientStyle = {
      background: 'linear-gradient(135deg, #E53E3E 0%, #C53030 100%)'
    };
  } else {
    // Use the card's color as base
    gradientStyle = {
      backgroundColor: card.color,
      backgroundImage: 'linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(0,0,0,0.1) 100%)'
    };
  }

  return (
    <div
      className="relative w-full rounded-xl p-5 overflow-hidden shadow-lg transform transition-all duration-300 hover:scale-[1.01]"
style={{
  ...gradientStyle,
  backgroundImage: card.type === 'VISA' ? 'url("/images/card/card-signature-rewards.png")' : '',
  backgroundSize: 'cover',
  backgroundPosition: 'center',
  aspectRatio: '558/351', // Match the sample card image dimensions
}}

    >
      <div className="flex justify-between items-start mb-16">
        {getCardLogo(card.type)}
        <button
          onClick={() => setShowInfo(!showInfo)}
          className="bg-black/40 px-3 py-1 rounded-full text-white text-xs flex items-center transition-all hover:bg-black/50"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="16"
            height="16"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            strokeWidth="2"
            strokeLinecap="round"
            strokeLinejoin="round"
            className="mr-1"
          >
            <circle cx="12" cy="12" r="10"></circle>
            <line x1="12" y1="16" x2="12" y2="12"></line>
            <line x1="12" y1="8" x2="12.01" y2="8"></line>
          </svg>
          Show info
        </button>
      </div>
      <div className="mb-4">
        <div className="w-10 h-8 bg-gray-300/60 rounded">
          <div className="w-full h-full bg-gradient-to-r from-gray-300/60 to-gray-400/40 rounded"></div>
        </div>
      </div>
      <div className="grid grid-cols-3 text-white">
        <div>
          <div className="text-xs opacity-75 mb-1 tracking-wider">CARD NUMBER</div>
          <div className="text-lg font-medium">{card.number}</div>
        </div>
        <div>
          <div className="text-xs opacity-75 mb-1 tracking-wider">EXP.</div>
          <div className="text-lg font-medium">{card.expiry}</div>
        </div>
        <div>
          <div className="text-xs opacity-75 mb-1 tracking-wider">CVV</div>
          <div className="text-lg font-medium">{card.cvv}</div>
        </div>
      </div>
      
      {/* Card info panel that appears when "Show info" is clicked */}
      {showInfo && (
        <div className="absolute inset-0 bg-black/80 flex items-center justify-center p-4 z-10 animate-fade-in">
          <div className="bg-gray-800 p-4 rounded-lg w-full max-w-xs">
            <div className="flex justify-between mb-2">
              <h3 className="text-white font-medium">Card Details</h3>
              <button 
                onClick={() => setShowInfo(false)}
                className="text-gray-400 hover:text-white"
              >
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round">
                  <line x1="18" y1="6" x2="6" y2="18"></line>
                  <line x1="6" y1="6" x2="18" y2="18"></line>
                </svg>
              </button>
            </div>
            <div className="text-gray-300">
              <p className="mb-1">Card: {card.type}</p>
              <p className="mb-1">Number: {card.number}</p>
              <p className="mb-1">Expiry: {card.expiry}</p>
              <p>CVV: {card.cvv}</p>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default CreditCard;




